name: Build and run tests

on: [push, pull_request]

env:
  CMAKE_COLOR_DIAGNOSTICS: ON
  OMP_NUM_THREADS: 1

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}

    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows static",
            os: windows-latest,
            build_type: "Release",
            shared_libs: false,
            generators: "Visual Studio 17 2022"
          }
        - {
            name: "Ubuntu Linux static",
            os: ubuntu-latest,
            build_type: "Release",
            shared_libs: false,
            generators: "Ninja"
          }
        - {
            name: "macOS static",
            os: macos-latest,
            build_type: "Release",
            shared_libs: false,
            generators: "Ninja"
          }
        - {
            name: "Windows shared",
            os: windows-latest,
            build_type: "Release",
            shared_libs: true,
            generators: "Visual Studio 17 2022"
          }
        - {
            name: "Ubuntu Linux shared",
            os: ubuntu-latest,
            build_type: "Release",
            shared_libs: true,
            generators: "Ninja"
          }
        - {
            name: "macOS shared",
            os: macos-latest,
            build_type: "Release",
            shared_libs: true,
            generators: "Ninja"
          }

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies on Windows
        if: startsWith(matrix.config.os, 'windows')
        run: choco install -y --no-progress cmake ninja

      - name: Install dependencies on Linux
        if: startsWith(matrix.config.os, 'ubuntu')
        run: |
          wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | sudo tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null
          echo 'deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ noble main' | sudo tee /etc/apt/sources.list.d/kitware.list >/dev/null
          sudo apt-get update
          sudo apt-get install ninja-build cmake

      - name: Install dependencies on macOS
        if: startsWith(matrix.config.os, 'macos')
        run: brew install cmake ninja

      - name: Prepare build folder
        shell: bash
        run: |
          mkdir build
          cmake \
            -S . \
            -B build \
            -DBUILD_SHARED_LIBS=${{ matrix.config.shared_libs }} \
            -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} \
            -G "${{ matrix.config.generators }}" \
            -DCMAKE_INSTALL_PREFIX:PATH=instdir

      - name: Build project
        shell: bash
        run: cmake --build build --config ${{ matrix.config.build_type }}

      - name: Run tests
        shell: bash
        env:
          CTEST_OUTPUT_ON_FAILURE: 1
        run: |
          cd build
          ctest -C ${{ matrix.config.build_type }} --output-junit report.xml

      - name: Archive unit test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: unit-test-results-${{ matrix.config.os }}-${{ matrix.config.shared_libs }}
          path: build/report.xml

      - name: Install and strip
        shell: bash
        run: cmake --install build --config ${{ matrix.config.build_type }} --strip
